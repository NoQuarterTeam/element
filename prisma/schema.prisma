generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id                   String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                String    @unique
  password             String
  firstName            String
  role                 Role      @default(USER)
  lastName             String
  avatar               String?
  stripeCustomerId     String    @unique
  stripeSubscriptionId String?   @unique
  createdAt            DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt            DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  archivedAt           DateTime? @db.Timestamptz(6)
  tasks                Task[]
  createdTasks         Task[]    @relation(name: "CreatedTasks")
  elements             Element[]
}

model Task {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String
  description     String?
  date            DateTime
  isComplete      Boolean  @default(false)
  startTime       String?
  durationHours   Int?
  durationMinutes Int?
  element         Element  @relation(fields: [elementId], references: [id], onDelete: Cascade)
  elementId       String   @db.Uuid
  order           Int      @default(50)
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime @default(now()) @updatedAt @db.Timestamptz(6)
  creator         User     @relation(name: "CreatedTasks", fields: [creatorId], references: [id])
  creatorId       String   @db.Uuid
  users           User[]
}

model Element {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  color      String
  archivedAt DateTime?
  createdAt  DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt  DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  children   Element[] @relation(name: "ChildElements")
  parent     Element?  @relation(name: "ChildElements", fields: [parentId], references: [id])
  parentId   String?   @db.Uuid
  creator    User      @relation(fields: [creatorId], references: [id])
  creatorId  String    @db.Uuid
  tasks      Task[]
}
